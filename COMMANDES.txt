═══════════════════════════════════════════════════════════════
  COMMANDES À COPIER-COLLER - Déploiement sur Render
═══════════════════════════════════════════════════════════════

📋 Ce fichier contient toutes les commandes dont vous aurez besoin.
   Suivez le GUIDE-DEBUTANT.md et copiez-collez les commandes d'ici.

───────────────────────────────────────────────────────────────
PARTIE 1 : ENVOYER LE CODE SUR GITHUB
───────────────────────────────────────────────────────────────

⚠️ IMPORTANT : Remplacez <VOTRE_USERNAME> par votre nom d'utilisateur GitHub !
   Exemple : Si votre username est "dieuveille", la commande devient :
   git remote add origin https://github.com/dieuveille/dieu-veille-nos-enfants.git

📝 Instructions :
   1. Ouvrez le Shell dans Replit (onglet "Shell" en bas)
   2. Copiez CHAQUE commande UNE PAR UNE
   3. Collez dans le Shell (clic droit → Paste)
   4. Appuyez sur Entrée
   5. Passez à la commande suivante

┌─────────────────────────────────────────────────────────────┐
│ COMMANDE 1 : Initialiser Git                                │
└─────────────────────────────────────────────────────────────┘

git init


┌─────────────────────────────────────────────────────────────┐
│ COMMANDE 2 : Ajouter tous les fichiers                      │
└─────────────────────────────────────────────────────────────┘

git add .


┌─────────────────────────────────────────────────────────────┐
│ COMMANDE 3 : Créer un commit (sauvegarder l'état)           │
└─────────────────────────────────────────────────────────────┘

git commit -m "Initial commit - Ready for Render deployment"


┌─────────────────────────────────────────────────────────────┐
│ COMMANDE 4 : Se connecter au dépôt GitHub                   │
│ ⚠️ CHANGEZ <VOTRE_USERNAME> !                                │
└─────────────────────────────────────────────────────────────┘

git remote add origin https://github.com/<VOTRE_USERNAME>/dieu-veille-nos-enfants.git

Exemple si votre username est "dieuveille" :
git remote add origin https://github.com/dieuveille/dieu-veille-nos-enfants.git


┌─────────────────────────────────────────────────────────────┐
│ COMMANDE 5 : Choisir la branche "main"                      │
└─────────────────────────────────────────────────────────────┘

git branch -M main


┌─────────────────────────────────────────────────────────────┐
│ COMMANDE 6 : Envoyer le code sur GitHub                     │
│ ⚠️ Quand on vous demande le mot de passe :                   │
│    → COLLEZ VOTRE TOKEN GitHub (ghp_xxxxx)                   │
│    → PAS votre mot de passe normal !                         │
└─────────────────────────────────────────────────────────────┘

git push -u origin main


✅ SI TOUT S'EST BIEN PASSÉ :
   Vous verrez un message comme :
   "Branch 'main' set up to track remote branch 'main' from 'origin'."

❌ SI ERREUR "remote origin already exists" :
   Tapez d'abord : git remote remove origin
   Puis recommencez la COMMANDE 4


───────────────────────────────────────────────────────────────
PARTIE 2 : GÉNÉRER SESSION_SECRET
───────────────────────────────────────────────────────────────

📝 Cette commande génère un mot de passe aléatoire sécurisé
   pour protéger les sessions utilisateurs.

┌─────────────────────────────────────────────────────────────┐
│ COMMANDE : Générer SESSION_SECRET                           │
└─────────────────────────────────────────────────────────────┘

node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"


📋 RÉSULTAT :
   Vous allez obtenir une longue chaîne comme :
   a3f8d9c2b1e4f7a9d3c8b2e1f6a4d9c7b3e8f1a6d2c9b4e7f3a8d1c6b9e2f5a7

   ⚠️ COPIEZ CETTE VALEUR !
   Vous en aurez besoin sur Render, dans les variables d'environnement.


───────────────────────────────────────────────────────────────
PARTIE 3 : MISES À JOUR FUTURES
───────────────────────────────────────────────────────────────

📝 Quand vous modifiez votre code et voulez le mettre à jour sur Render :

┌─────────────────────────────────────────────────────────────┐
│ COMMANDE 1 : Ajouter les changements                        │
└─────────────────────────────────────────────────────────────┘

git add .


┌─────────────────────────────────────────────────────────────┐
│ COMMANDE 2 : Sauvegarder avec un message                    │
│ (Changez le message entre guillemets !)                     │
└─────────────────────────────────────────────────────────────┘

git commit -m "Description de vos changements"

Exemples :
git commit -m "Ajout d'une nouvelle fonctionnalité"
git commit -m "Correction du formulaire de contact"
git commit -m "Mise à jour des tarifs"


┌─────────────────────────────────────────────────────────────┐
│ COMMANDE 3 : Envoyer sur GitHub                             │
└─────────────────────────────────────────────────────────────┘

git push


✅ Render va automatiquement redéployer votre application !
   (Cela prend 5-10 minutes)


───────────────────────────────────────────────────────────────
PARTIE 4 : COMMANDES DE DÉPANNAGE
───────────────────────────────────────────────────────────────

┌─────────────────────────────────────────────────────────────┐
│ Voir l'état de Git                                          │
└─────────────────────────────────────────────────────────────┘

git status


┌─────────────────────────────────────────────────────────────┐
│ Voir l'historique des commits                               │
└─────────────────────────────────────────────────────────────┘

git log --oneline


┌─────────────────────────────────────────────────────────────┐
│ Forcer la mise à jour (si conflit)                          │
│ ⚠️ ATTENTION : Écrase les changements distants !             │
└─────────────────────────────────────────────────────────────┘

git push --force


┌─────────────────────────────────────────────────────────────┐
│ Réinitialiser Git (si problème)                             │
│ ⚠️ ATTENTION : Supprime tout l'historique Git local !        │
└─────────────────────────────────────────────────────────────┘

rm -rf .git
git init


───────────────────────────────────────────────────────────────
PARTIE 5 : VARIABLES D'ENVIRONNEMENT RENDER
───────────────────────────────────────────────────────────────

📋 À copier-coller dans Render lors de la configuration du Web Service :

┌─────────────────────────────────────────────────────────────┐
│ Variable 1                                                   │
└─────────────────────────────────────────────────────────────┘

Key:   NODE_ENV
Value: production


┌─────────────────────────────────────────────────────────────┐
│ Variable 2                                                   │
└─────────────────────────────────────────────────────────────┘

Key:   DATABASE_URL
Value: [COLLEZ L'URL DE VOTRE BASE DE DONNÉES POSTGRESQL]

Exemple :
postgresql://dieu_veille_user:xxxxx@dpg-xxxxx-a.frankfurt-postgres.render.com/dieu_veille


┌─────────────────────────────────────────────────────────────┐
│ Variable 3                                                   │
└─────────────────────────────────────────────────────────────┘

Key:   SESSION_SECRET
Value: [COLLEZ LE SECRET GÉNÉRÉ AVEC LA COMMANDE DE LA PARTIE 2]

Exemple :
a3f8d9c2b1e4f7a9d3c8b2e1f6a4d9c7b3e8f1a6d2c9b4e7f3a8d1c6b9e2f5a7


───────────────────────────────────────────────────────────────
PARTIE 6 : COMMANDE RENDER SHELL (INITIALISATION DB)
───────────────────────────────────────────────────────────────

📝 À exécuter dans le Shell de Render (après déploiement) :

┌─────────────────────────────────────────────────────────────┐
│ Initialiser la base de données                              │
└─────────────────────────────────────────────────────────────┘

npm run db:migrate


✅ Vous devriez voir :
   - ✅ Database migration complete!
   - 📊 Tables created: admin_users, parent_requests, etc.


❌ Si erreur, essayez :

npm run db:push --force


───────────────────────────────────────────────────────────────
📞 BESOIN D'AIDE ?
───────────────────────────────────────────────────────────────

Consultez GUIDE-DEBUTANT.md pour les instructions détaillées.
Consultez DEPLOY.md pour la documentation technique complète.

═══════════════════════════════════════════════════════════════
